DROP TABLE DEPARTMENT CASCADE CONSTRAINTS PURGE;
DROP TABLE STUDENT CASCADE CONSTRAINTS PURGE;
DROP TABLE PROFESSOR CASCADE CONSTRAINTS PURGE;
DROP TABLE SUBJECT CASCADE CONSTRAINTS PURGE;
DROP TABLE CLASSROOM CASCADE CONSTRAINTS PURGE;
DROP TABLE CLASSPLAN CASCADE CONSTRAINTS PURGE;
DROP TABLE CLASSREQUEST CASCADE CONSTRAINTS PURGE;
DROP TABLE CLASSBASKET CASCADE CONSTRAINTS PURGE;
DROP TABLE EVALUATION CASCADE CONSTRAINTS PURGE;
DROP TABLE SCHOLARSHIP CASCADE CONSTRAINTS PURGE;
DROP TABLE NOTICEBOARD CASCADE CONSTRAINTS PURGE;
DROP TABLE MVC_BOARD CASCADE CONSTRAINTS PURGE;
DROP TABLE REGISTER CASCADE CONSTRAINTS PURGE;
DROP TABLE REINSTATEMENT CASCADE CONSTRAINTS PURGE;
DROP TABLE SUBSPECIALTY CASCADE CONSTRAINTS PURGE;

drop sequence SEQ_DEPARTMENT;
drop sequence SEQ_STUDENT;
drop sequence SEQ_PROFESSOR;
drop sequence SEQ_SUBJECT;
drop sequence SEQ_CLASSROOM;
drop sequence SEQ_CLASSPLAN;
drop sequence SEQ_CLASSREQUEST;
drop sequence SEQ_CLASSBASKET;
drop sequence SEQ_GRADE;
drop sequence SEQ_EVALUATION;
drop sequence SEQ_SCHOLARSHIP;
drop sequence SEQ_S_NUM;
drop sequence SEQ_BOARD;

create sequence SEQ_DEPARTMENT start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_STUDENT start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_PROFESSOR start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_SUBJECT start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_CLASSROOM start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_CLASSPLAN start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_CLASSREQUEST start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_CLASSBASKET start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_GRADE start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_EVALUATION start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_SCHOLARSHIP start with 1 increment BY 1 maxvalue 10000;

create sequence SEQ_S_NUM start with 1 increment BY 1 maxvalue 10000;
create sequence SEQ_BOARD start with 1 increment BY 1 maxvalue 10000;


-- 학과 테이블
CREATE TABLE DEPARTMENT(
	NO NUMBER PRIMARY KEY,
	D_NUM VARCHAR2(2) UNIQUE NOT NULL, --학과번호
	D_NAME VARCHAR2(4000) NOT NULL --학과이름
);

-- 학생 테이블
CREATE TABLE STUDENT(
	NO NUMBER PRIMARY KEY,
	SD_NUM NUMBER UNIQUE NOT NULL,--학번
	SD_NAME VARCHAR2(200) NOT NULL,--학생이름
	SD_PASSWD VARCHAR2(200) NOT NULL, --학생 PW
	D_NUM VARCHAR2(2) REFERENCES DEPARTMENT(D_NUM), --학과번호
	D_SUB_NUM VARCHAR2(2) DEFAULT '0' REFERENCES DEPARTMENT(D_NUM), --부/복수전공번호
	SD_JUMIN VARCHAR2(50),--학생 생일월일
	SD_HPONE VARCHAR2(50),--학생 핸드폰 번호
	SD_ADDRESS VARCHAR2(200),--학생 주소
	SD_EMAIL VARCHAR2(200),--학생 이메일
	SD_AC_NO VARCHAR2(200),--계좌번호
	SD_AC_NAME VARCHAR2(200),--계좌은행이름
	SD_GRADE NUMBER,--현재학년
	SD_SEMESTER NUMBER,--이수학기
	SD_START_DATE DATE, --입학날짜
	SD_END_DATE DATE, -- 졸업날짜
	SD_RE_LOA VARCHAR2(1) DEFAULT '0' CHECK (SD_RE_LOA IN('0','1')),--재학인지 휴학인지 상태값
	SD_SPECIALTY VARCHAR2(1) DEFAULT '0' CHECK (SD_SPECIALTY IN('0','1','2'))--전공,부전공,복수전공인지 상태값
);

-- 교수 테이블
CREATE TABLE PROFESSOR(
	NO NUMBER PRIMARY KEY,
	PF_NUM VARCHAR2(50) UNIQUE NOT NULL,--교번
	PF_NAME VARCHAR2(200) NOT NULL,--교수이름
	PF_PASSWD VARCHAR2(200) NOT NULL, --교수 PW
	D_NUM VARCHAR2(2) REFERENCES DEPARTMENT(D_NUM), --학과번호
	PF_JUMIN VARCHAR2(50),--교수 생일월일
	PF_HPONE VARCHAR2(50),--교수 핸드폰 번호
	PF_ADDRESS VARCHAR2(200),--교수 주소
	PF_EMAIL VARCHAR2(200),--교수 이메일
	PF_AC_NO VARCHAR2(200),--교수 계좌번호
	PF_AC_NAME VARCHAR2(200)--계좌은행이름
);

--과목 테이블
CREATE TABLE SUBJECT(
	NO NUMBER PRIMARY KEY,
	S_NUM VARCHAR2(200) UNIQUE NOT NULL,--과목번호
	S_NAME VARCHAR2(200),--교과목명
	S_CP_DIVISION VARCHAR(200),--이수구분
	S_CP_CREDITS NUMBER,--이수학점
	D_NUM VARCHAR2(2) REFERENCES DEPARTMENT(D_NUM)--학과번호
);

--강의실 테이블
CREATE TABLE CLASSROOM(
	NO NUMBER PRIMARY KEY,
	CR_NUM VARCHAR2(50) UNIQUE NOT NULL--강의실 번호 건물이름 제외
);

--강의계획 테이블
CREATE TABLE CLASSPLAN(
	NO NUMBER PRIMARY KEY,
	CP_NUM NUMBER UNIQUE NOT NULL,--강의 계획 번호
	S_NUM VARCHAR2(50) REFERENCES SUBJECT(S_NUM), --과목번호
	CR_NUM VARCHAR2(50) REFERENCES CLASSROOM(CR_NUM), --강의실 번호
	PF_NUM VARCHAR2(50) REFERENCES PROFESSOR(PF_NUM), --교수번호
	CP_TIME VARCHAR2(20), --강의시간/요일
	CP_MAX_NO NUMBER,--강의 최대인원
	CP_CURRENT_NO NUMBER,--강의 현재인원
	CP_OUTLINE VARCHAR2(4000), --강의개요
	CP_TEXTBOOK VARCHAR2(200), --교재
	CP_SUB_TEXTBOOK VARCHAR2(200), --부교재
	CP_VALUATION VARCHAR2(200), --평가 방법
	CP_SCHEDULE VARCHAR2(200),--강의일정
	CP_DATE DATE DEFAULT SYSDATE,--작성일자
	CP_YEAR VARCHAR2(20), --개설년도
	CP_SEMESTER VARCHAR2(20), --개설학기
	REGISTRATION VARCHAR2(1) DEFAULT '0' CHECK (REGISTRATION IN('0','1'))--등록상태
);

--수강신청 테이블 + 성적 관리
CREATE TABLE CLASSREQUEST(
	NO NUMBER PRIMARY KEY,
	CR_NUM NUMBER UNIQUE NOT NULL, --수강신청번호
	CP_NUM NUMBER REFERENCES CLASSPLAN(CP_NUM),--강의 계획 번호
	SD_NUM NUMBER REFERENCES STUDENT(SD_NUM), -- 학번
	G_SUM VARCHAR2(3)--성적
);

--담은수강 테이블
CREATE TABLE CLASSBASKET(
	NO NUMBER PRIMARY KEY,
	CB_NUM NUMBER UNIQUE NOT NULL, --담은수강번호
	CP_NUM NUMBER REFERENCES CLASSPLAN(CP_NUM),--강의 계획 번호
	SD_NUM NUMBER REFERENCES STUDENT(SD_NUM) -- 학번
);

--강의평가
CREATE TABLE EVALUATION(
	NO NUMBER PRIMARY KEY,
	CR_NUM NUMBER REFERENCES CLASSREQUEST(CR_NUM),--수강신청번호
	LIST_1 VARCHAR2(1000),--항목리스트
	LIST_2 VARCHAR2(1000),
	LIST_3 VARCHAR2(1000),
	LIST_4 VARCHAR2(1000),
	LIST_5 VARCHAR2(1000),
	E_SUM NUMBER--총점수
);

--장학금
CREATE TABLE SCHOLARSHIP(
	NO NUMBER PRIMARY KEY,
	SD_NUM NUMBER REFERENCES STUDENT(SD_NUM), -- 학번
	YEAR VARCHAR2(20), --년도
	GRADE NUMBER,--학년
	SEMESTER VARCHAR2(20), --학기
	NAME VARCHAR(20),--장학금이름
	SUM NUMBER, -- 장학금
	SYS_DATE DATE DEFAULT SYSDATE -- 작성날짜
);

--공지사항
CREATE TABLE NOTICEBOARD(
	NUM NUMBER NOT NULL PRIMARY KEY,--글 번호
	WRITER VARCHAR2(10) NOT NULL,--작성자
	SUBJECT VARCHAR2(50) NOT NULL,--제목
	REG_DATE DATE DEFAULT SYSDATE, --작성일
	READCOUNT NUMBER DEFAULT 0,--조회수
	CONTENT VARCHAR2(4000) NOT NULL--내용
);

--게시판
CREATE TABLE MVC_BOARD(
	NUM NUMBER NOT NULL PRIMARY KEY,--글 번호
	SD_NUM NUMBER REFERENCES STUDENT(SD_NUM),-- 학번
	SUBJECT VARCHAR2(50) NOT NULL,--제목
	PASSWD NUMBER,--비번(학번)
	REG_DATE DATE DEFAULT SYSDATE, --작성일
	READCOUNT NUMBER DEFAULT 0,--조회수
	REF NUMBER NOT NULL,--그룹번호
	RE_STEP NUMBER NOT NULL, --그룹 내 순서
	RE_LEVEL NUMBER NOT NULL, --글의 레벨
	CONTENT VARCHAR2(4000) NOT NULL,--내용
	FILENAME VARCHAR2(200) NOT NULL,--파일업로드.. 파일 이름
	REALPATH VARCHAR2(200) NOT NULL,--파일업로드.. 파일 경로
	FILESIZE NUMBER	--파일업로드.. 파일사이즈
);



-----학적변동-------------------------------------------------------
CREATE TABLE REGISTER(
	SD_NUM NUMBER REFERENCES STUDENT(SD_NUM), --학번
	SRC_REQUEST_DATE DATE, --변동 신청 날짜
	SRC_DATE DATE DEFAULT SYSDATE, -- 학적변동 날짜
	SRC_VALUE VARCHAR2(100) -- 학적 변동 내용 -> ( 신청 / 완료 )
);
----------------------------------------------------------------------

------휴학/복학/휴학연장 신청 테이블
CREATE TABLE REINSTATEMENT(
	SD_NUM NUMBER REFERENCES STUDENT(SD_NUM),---학번
	RE_LOA_DATE DATE,-----선택(1)휴학신청 날짜
	LOA_END_YEAR VARCHAR2(10),-----휴학만료년도 -- 년도
	LOA_END_SEMESTER VARCHAR2(5),-----휴학만료학기 -- 1,2
	LOA_A_DATE DATE,-----휴학신청승인날짜
	RE_START_DATE DATE,----------선택(2)복학신청 날짜
	RE_END_DATE DATE------------복학신청승인날짜
);
------복수/부 전공 신청 테이블
create table SUBSPECIALTY(
	SD_NUM NUMBER REFERENCES STUDENT(SD_NUM),---학번
	DM_DATE DATE,--복수전공신청날짜
	M_DATE DATE,--부 전공 신청날짜
	A_DATE DATE,--복수전공승인날짜
	MA_DATE DATE--부전공승인날짜
);